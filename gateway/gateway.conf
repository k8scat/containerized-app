upstream web {
    server ca-web:3214;
}

upstream api {
	server ca-api:4182;
}

server {
	set_by_lua $corp_id 'return os.getenv("CORP_ID")';
	set_by_lua $agent_id 'return os.getenv("AGENT_ID")';
	set_by_lua $secret 'return os.getenv("SECRET")';
	set_by_lua $callback_host 'return os.getenv("CALLBACK_HOST")';
	set_by_lua $callback_schema 'return os.getenv("CALLBACK_SCHEMA")';
	set_by_lua $callback_uri 'return os.getenv("CALLBACK_URI")';
	set_by_lua $logout_uri 'return os.getenv("LOGOUT_URI")';
	set_by_lua $token_expires 'return os.getenv("TOKEN_EXPIRES")';
	set_by_lua $use_secure_cookie 'return os.getenv("USE_SECURE_COOKIE")';

	listen 443 ssl http2;
	server_name $hostname;
	resolver 8.8.8.8;
	ssl_certificate /certs/cert.crt;
	ssl_certificate_key /certs/cert.key;
	ssl_session_cache shared:SSL:1m;
	ssl_session_timeout 5m;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers AESGCM:HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers on;
	lua_ssl_verify_depth 2;
    lua_ssl_trusted_certificate /etc/pki/tls/certs/ca-bundle.crt;

	if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
		set $year $1;
		set $month $2;
		set $day $3;
	}
	access_log logs/access_$year$month$day.log main;
	error_log logs/error.log;

	access_by_lua_file "/usr/local/openresty/nginx/conf/gateway.lua";

	location ^~ /gateway {
        root   html;
        index  index.html index.htm;
    }

	location ^~ /api {
        proxy_pass http://api;
        proxy_read_timeout 3600;
        proxy_http_version 1.1;
        proxy_set_header X_FORWARDED_PROTO https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header Connection "";
    }

	location ^~ / {
        proxy_pass http://web;
        proxy_read_timeout 3600;
        proxy_http_version 1.1;
        proxy_set_header X_FORWARDED_PROTO https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header Connection "";
    }

	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root html;
	}
}

server {
	listen 80;
	server_name $hostname;

	location / {
		rewrite ^/(.*) https://$server_name/$1 redirect;
	}
}
